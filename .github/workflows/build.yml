name: Dart

on:
  push:
    branches: [ master ]
    tags:
    - "*" 
  pull_request:
    branches: [ master ]
  
jobs:
  build:
    runs-on: ubuntu-latest

    # Note that this workflow uses the latest stable version of the Dart SDK.
    # Docker images for other release channels - like dev and beta - are also
    # available. See https://hub.docker.com/r/google/dart/ for the available
    # images.
    #container:
     # image:  google/dart:latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
        
        # Android Keys  
      - name: Android Keys
        run: |
            cd android/
            gpg --quiet --batch --yes --decrypt --passphrase=${{ secrets.KEY_SIGN }} \
            --output android.zip android.zip.gpg && jar xvf android.zip && cd -
      
      # Get Lastest tag
      - name: Get lastest tag
        id: tagg
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
        
       # Flutter stuffs  
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # or: 'beta' or 'dev'
      - name: Get Package  
        run: flutter pub get
      #- run: flutter test
     # - name: Build Apk per abi
       # run: flutter build apk --split-per-abi
      - name: Build fat apk
        run: flutter build apk
       
      # Parse changelog
      - name: Changelog
        id: chan
        run: |
            python3 changeprase.py
       
      
      #Upload
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/app/outputs/apk/release/SongTube*
          tag: ${{ steps.tagg.outputs.tag }}
          overwrite: true
          release_name:  SongTube ${{ steps.tagg.outputs.tag }} 
          body: ${{ steps.chan.outputs.BODY }} # Still testing
          file_glob: true
          
       
       # Telegram 
      - name: send photo message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            **Changelog**: ${{ steps.chan.outputs.BODY }} 
              ${{ github.event_name }}
          document: ${{ github.workspace }}/build/app/outputs/apk/release/SongTube*
      
        # Create release note
    #  - name: Create Release
    #    id: create_release
     #   uses: actions/create-release@v1
      #  env:
       #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       # with:
       #   tag_name: ${{ github.ref }}
        #  release_name: SongTube ${{ github.ref }}
         # body: ${{ env.BODY }}  
         
         
      # Upload files  
     # - name: Upload Release Asset
      #  id: upload-release-asset 
      #  uses: actions/upload-release-asset@v1
      #  env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #   upload_url: ${{ steps.create_release.outputs.upload_url }} 
      #   asset_path: build/app/outputs/apk/release/SongTube*
      #  asset_name: SongTube #Probably wrong format
      #    asset_content_type: application/vnd.android.package-archive
