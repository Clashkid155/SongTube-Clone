name: Dart

on:
  push:
    branches: [ master ]
    tags:
    - "*" 
  pull_request:
    branches: [ master ]
  
jobs:
  build:
    runs-on: ubuntu-latest

    # Note that this workflow uses the latest stable version of the Dart SDK.
    # Docker images for other release channels - like dev and beta - are also
    # available. See https://hub.docker.com/r/google/dart/ for the available
    # images.
    #container:
     # image:  google/dart:latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
        
        # Android Keys  
      - name: Android Keys
        run: |
            cd android/
            gpg --quiet --batch --yes --decrypt --passphrase=${{ secrets.KEY_SIGN }} \
            --output android.zip android.zip.gpg && jar xvf android.zip && cd -
      
      # Get Lastest tag
      - name: Get lastest tag
        id: tagg
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: ctime
        with:
          format: YYYYMMDD-HH
          utcOffset: "+01:00"

      - name: Time
        env:
          TIME: "-${{ steps.ctime.outputs.formattedTime }}"
        run: |
          echo $TIME
     
      # Parse changelog
      - name: Changelog
        id: chan
        run: |
           # Parse changelog
           BODY=$(python3 changeprase.py)
           BODY="${BODY//'%'/'%25'}"
           BODY="${BODY//$'\n'/'%0A'}"
           BODY="${BODY//$'\r'/'%0D'}"
 
           echo "Got changelog: $BODY"
           echo "::set-output name=BODY::$BODY"
        #echo "::set-output name=BODY::$(python3 changeprase.py)"
           #python3 changeprase.py


        #Create release note
      - name: Create release note
        #if: startsWith(github.ref, 'refs/tags') check if its a tag
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagg.outputs.tag }} $TIME
          release_name: SongTube ${{ github.ref }} $TIME
          body: |
              ${{ steps.chan.outputs.BODY }}
 

        
       # Flutter stuffs  
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # or: 'beta' or 'dev'
      - name: Get Package  
        run: flutter pub get
      #- run: flutter test
      - name: Build Apk per abi
        run: flutter build apk --split-per-abi

          
      #Upload split release
      - name: Upload split to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/app/outputs/apk/release/SongTube*
          tag: ${{ steps.tagg.outputs.tag }} ${{ env.TIME }}
            #overwrite: true
            #release_name:  SongTube ${{ steps.tagg.outputs.tag }} 
          file_glob: true
      


      - name: Build fat apk
        run: flutter build apk
       
      
      
      #Upload
      - name: Upload fat to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/app/outputs/apk/release/SongTube*
          tag: ${{ steps.tagg.outputs.tag }}
            #overwrite: true
            #release_name:  SongTube ${{ steps.tagg.outputs.tag }} 
          file_glob: true
          
       
       # Telegram 
      - name: Send Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: html
          message: |
            <b>New update available</b> See <a href="${{ steps.create_release.outputs.html_url }}">Github</a>
       
         
      # Upload files  
     # - name: Upload Release Asset
      #  id: upload-release-asset 
      #  uses: actions/upload-release-asset@v1
      #  env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #   upload_url: ${{ steps.create_release.outputs.upload_url }} 
      #   asset_path: build/app/outputs/apk/release/SongTube*
      #  asset_name: SongTube #Probably wrong format
      #    asset_content_type: application/vnd.android.package-archive
      #
      # For upload release     
      #document: ${{ github.workspace }}/build/app/outputs/apk/release/SongTube*      
